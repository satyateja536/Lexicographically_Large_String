Given a string, construct a new string by rearranging the original string and deleting characters as per your need. Your task is to return the lexicographically largest string that can be constructed where there is a limit as to how many consecutive characters can be the same.

 

For example, let's say the original string is s = "baccc". Also, the new string cannot have more than k = 2 consecutive characters that are the same. In this case, the lexicographically largest string possible is "ccbca". Note that the string "cccba" is not allowed because it uses the character 'c' more than 2 times consecutively. Therefore, the answer is "ccbca".

 

Function Description

Complete the function getLargestString in the editor below.

 

getLargestString has the following parameters:

    string s[n]:  the original string

    int k: the maximum number of identical consecutive characters the new string can have

Returns:

    string: the lexicographically largest string that can be constructed that has no more than k identical consecutive characters

 

Constraints

●      1 ≤ n ≤ 105

●      1 ≤ k ≤ 103

●      The string s contains only lowercase English letters.

Sample Input For Custom Testing

STDIN     Function

-----     --------

zzzazz => s = "zzzazz"

2      => k = 2

 

Sample Output

zzazz

Explanation

"zzazz" is the lexicographically largest string that can be made under the given conditions. One 'z' must be removed so that no more than 2 consecutive characters are the same.